import { useState } from 'react';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';

interface Fighter {
  id: number;
  name: string;
  nickname: string;
  weightClass: string;
  record: string;
  wins: number;
  losses: number;
  draws: number;
  nationality: string;
  rank?: number;
}

interface Event {
  id: number;
  number: number;
  name: string;
  date: string;
  location: string;
  mainEvent: string;
}

const mockFighters: Fighter[] = [
  {
    id: 1,
    name: '–•–∞–±–∏–± –ù—É—Ä–º–∞–≥–æ–º–µ–¥–æ–≤',
    nickname: 'The Eagle',
    weightClass: '–õ—ë–≥–∫–∏–π –≤–µ—Å',
    record: '29-0-0',
    wins: 29,
    losses: 0,
    draws: 0,
    nationality: 'üá∑üá∫ –†–æ—Å—Å–∏—è',
    rank: 1
  },
  {
    id: 2,
    name: '–ö–æ–Ω–æ—Ä –ú–∞–∫–ì—Ä–µ–≥–æ—Ä',
    nickname: 'The Notorious',
    weightClass: '–õ—ë–≥–∫–∏–π –≤–µ—Å',
    record: '22-6-0',
    wins: 22,
    losses: 6,
    draws: 0,
    nationality: 'üáÆüá™ –ò—Ä–ª–∞–Ω–¥–∏—è',
    rank: 2
  },
  {
    id: 3,
    name: '–î–∂–æ–Ω –î–∂–æ–Ω—Å',
    nickname: 'Bones',
    weightClass: '–¢—è–∂—ë–ª—ã–π –≤–µ—Å',
    record: '27-1-0',
    wins: 27,
    losses: 1,
    draws: 0,
    nationality: 'üá∫üá∏ –°–®–ê',
    rank: 1
  },
  {
    id: 4,
    name: '–ò—Å—Ä–∞—ç–ª—å –ê–¥–µ—Å–∞–Ω—å—è',
    nickname: 'The Last Stylebender',
    weightClass: '–°—Ä–µ–¥–Ω–∏–π –≤–µ—Å',
    record: '24-3-0',
    wins: 24,
    losses: 3,
    draws: 0,
    nationality: 'üá≥üáø –ù–æ–≤–∞—è –ó–µ–ª–∞–Ω–¥–∏—è',
    rank: 1
  },
  {
    id: 5,
    name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–æ–ª–∫–∞–Ω–æ–≤—Å–∫–∏–π',
    nickname: 'The Great',
    weightClass: '–ü–æ–ª—É–ª—ë–≥–∫–∏–π –≤–µ—Å',
    record: '26-3-0',
    wins: 26,
    losses: 3,
    draws: 0,
    nationality: 'üá¶üá∫ –ê–≤—Å—Ç—Ä–∞–ª–∏—è',
    rank: 1
  },
  {
    id: 6,
    name: '–ö–∞–º–∞—Ä—É –£—Å–º–∞–Ω',
    nickname: 'The Nigerian Nightmare',
    weightClass: '–ü–æ–ª—É—Å—Ä–µ–¥–Ω–∏–π –≤–µ—Å',
    record: '20-3-0',
    wins: 20,
    losses: 3,
    draws: 0,
    nationality: 'üá≥üá¨ –ù–∏–≥–µ—Ä–∏—è',
    rank: 2
  }
];

const mockEvents: Event[] = [
  {
    id: 1,
    number: 308,
    name: 'UFC 308: –¢–æ–ø—É—Ä–∏—è vs. –•–æ–ª–ª–æ—É—ç–π',
    date: '26 –æ–∫—Ç—è–±—Ä—è 2024',
    location: '–ê–±—É-–î–∞–±–∏, –û–ê–≠',
    mainEvent: '–ò–ª—å—è –¢–æ–ø—É—Ä–∏—è vs. –ú–∞–∫—Å –•–æ–ª–ª–æ—É—ç–π'
  },
  {
    id: 2,
    number: 307,
    name: 'UFC 307: –ü–µ—Ä–µ–π—Ä–∞ vs. –†—É–Ω—Ç—Ä–∏',
    date: '5 –æ–∫—Ç—è–±—Ä—è 2024',
    location: '–°–æ–ª—Ç-–õ–µ–π–∫-–°–∏—Ç–∏, –°–®–ê',
    mainEvent: '–ê–ª–µ–∫—Å –ü–µ—Ä–µ–π—Ä–∞ vs. –•–∞–ª–∏–ª –†—É–Ω—Ç—Ä–∏'
  },
  {
    id: 3,
    number: 306,
    name: 'UFC 306: –û\'–ú—ç–ª–ª–∏ vs. –î–≤–∞–ª–∞–¥–∑–µ',
    date: '14 —Å–µ–Ω—Ç—è–±—Ä—è 2024',
    location: '–õ–∞—Å-–í–µ–≥–∞—Å, –°–®–ê',
    mainEvent: '–®–æ–Ω –û\'–ú—ç–ª–ª–∏ vs. –ú–µ—Ä–∞–± –î–≤–∞–ª–∞–¥–∑–µ'
  },
  {
    id: 4,
    number: 309,
    name: 'UFC 309: –î–∂–æ–Ω—Å vs. –ú–∏–æ—á–∏—á',
    date: '16 –Ω–æ—è–±—Ä—è 2024',
    location: '–ù—å—é-–ô–æ—Ä–∫, –°–®–ê',
    mainEvent: '–î–∂–æ–Ω –î–∂–æ–Ω—Å vs. –°—Ç–∏–ø–µ –ú–∏–æ—á–∏—á'
  }
];

const Index = () => {
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedTab, setSelectedTab] = useState('fighters');

  const filteredFighters = mockFighters.filter(fighter =>
    fighter.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
    fighter.nickname.toLowerCase().includes(searchQuery.toLowerCase())
  );

  const filteredEvents = mockEvents.filter(event =>
    event.number.toString().includes(searchQuery) ||
    event.name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  return (
    <div className="min-h-screen bg-background">
      <div className="relative overflow-hidden bg-gradient-to-br from-primary/20 via-background to-background border-b border-border">
        <div className="container mx-auto px-4 py-16">
          <div className="max-w-4xl mx-auto text-center animate-fade-in">
            <h1 className="text-6xl md:text-8xl font-bold mb-4 tracking-tight">
              UFC <span className="text-primary">DATABASE</span>
            </h1>
            <p className="text-xl md:text-2xl text-muted-foreground mb-8">
              –ü–æ–ª–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –±–æ–π—Ü–æ–≤, —Å–æ–±—ã—Ç–∏–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ UFC
            </p>
            
            <div className="max-w-2xl mx-auto relative">
              <Icon 
                name="Search" 
                className="absolute left-4 top-1/2 -translate-y-1/2 text-muted-foreground" 
                size={20} 
              />
              <Input
                type="text"
                placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –±–æ–π—Ü–∞ –∏–ª–∏ –Ω–æ–º–µ—Ä—É —Å–æ–±—ã—Ç–∏—è..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="pl-12 h-14 text-lg bg-card border-border"
              />
            </div>
          </div>
        </div>
      </div>

      <div className="container mx-auto px-4 py-12">
        <Tabs defaultValue="fighters" className="w-full" onValueChange={setSelectedTab}>
          <TabsList className="grid w-full max-w-md mx-auto grid-cols-3 mb-8">
            <TabsTrigger value="fighters" className="flex items-center gap-2">
              <Icon name="User" size={16} />
              –ë–æ–π—Ü—ã
            </TabsTrigger>
            <TabsTrigger value="events" className="flex items-center gap-2">
              <Icon name="Calendar" size={16} />
              –°–æ–±—ã—Ç–∏—è
            </TabsTrigger>
            <TabsTrigger value="rankings" className="flex items-center gap-2">
              <Icon name="Trophy" size={16} />
              –†–µ–π—Ç–∏–Ω–≥–∏
            </TabsTrigger>
          </TabsList>

          <TabsContent value="fighters" className="animate-fade-in">
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
              {filteredFighters.map((fighter, index) => (
                <Card 
                  key={fighter.id} 
                  className="hover:border-primary transition-all duration-300 hover:shadow-lg hover:shadow-primary/20 cursor-pointer group"
                  style={{ animationDelay: `${index * 50}ms` }}
                >
                  <CardHeader>
                    <div className="flex justify-between items-start mb-2">
                      <div className="flex-1">
                        <CardTitle className="text-2xl group-hover:text-primary transition-colors">
                          {fighter.name}
                        </CardTitle>
                        <CardDescription className="text-accent font-medium">
                          "{fighter.nickname}"
                        </CardDescription>
                      </div>
                      {fighter.rank && (
                        <Badge variant="default" className="text-lg px-3 py-1">
                          #{fighter.rank}
                        </Badge>
                      )}
                    </div>
                    <div className="flex items-center gap-2 text-sm text-muted-foreground">
                      <Icon name="Flag" size={14} />
                      {fighter.nationality}
                    </div>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      <div className="flex items-center justify-between">
                        <span className="text-muted-foreground">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
                        <Badge variant="secondary">{fighter.weightClass}</Badge>
                      </div>
                      
                      <div className="pt-3 border-t border-border">
                        <div className="grid grid-cols-3 gap-4 text-center">
                          <div>
                            <div className="text-2xl font-bold text-green-500">{fighter.wins}</div>
                            <div className="text-xs text-muted-foreground">–ü–æ–±–µ–¥—ã</div>
                          </div>
                          <div>
                            <div className="text-2xl font-bold text-red-500">{fighter.losses}</div>
                            <div className="text-xs text-muted-foreground">–ü–æ—Ä–∞–∂–µ–Ω–∏—è</div>
                          </div>
                          <div>
                            <div className="text-2xl font-bold text-yellow-500">{fighter.draws}</div>
                            <div className="text-xs text-muted-foreground">–ù–∏—á—å–∏</div>
                          </div>
                        </div>
                        <div className="mt-3 text-center">
                          <span className="text-lg font-bold text-primary">{fighter.record}</span>
                          <span className="text-muted-foreground text-sm ml-2">–æ–±—â–∏–π —Ä–µ–∫–æ—Ä–¥</span>
                        </div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="events" className="animate-fade-in">
            <div className="grid md:grid-cols-2 gap-6 max-w-5xl mx-auto">
              {filteredEvents.map((event, index) => (
                <Card 
                  key={event.id}
                  className="hover:border-primary transition-all duration-300 hover:shadow-lg hover:shadow-primary/20 cursor-pointer"
                  style={{ animationDelay: `${index * 50}ms` }}
                >
                  <CardHeader>
                    <div className="flex items-start justify-between mb-2">
                      <Badge variant="default" className="text-xl px-4 py-1 font-bold">
                        UFC {event.number}
                      </Badge>
                      <Badge variant="outline" className="text-sm">
                        {event.date}
                      </Badge>
                    </div>
                    <CardTitle className="text-xl">{event.name}</CardTitle>
                    <CardDescription className="flex items-center gap-2">
                      <Icon name="MapPin" size={14} />
                      {event.location}
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="bg-primary/10 border border-primary/30 rounded-lg p-4">
                      <div className="text-xs text-muted-foreground mb-1">–ì–õ–ê–í–ù–´–ô –ë–û–ô</div>
                      <div className="text-lg font-bold">{event.mainEvent}</div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="rankings" className="animate-fade-in">
            <div className="max-w-4xl mx-auto space-y-6">
              {['–¢—è–∂—ë–ª—ã–π –≤–µ—Å', '–õ—ë–≥–∫–∏–π –≤–µ—Å', '–°—Ä–µ–¥–Ω–∏–π –≤–µ—Å', '–ü–æ–ª—É–ª—ë–≥–∫–∏–π –≤–µ—Å', '–ü–æ–ª—É—Å—Ä–µ–¥–Ω–∏–π –≤–µ—Å'].map((weightClass, index) => {
                const fighters = mockFighters.filter(f => f.weightClass === weightClass).sort((a, b) => (a.rank || 999) - (b.rank || 999));
                
                if (fighters.length === 0) return null;
                
                return (
                  <Card key={weightClass} className="animate-scale-in" style={{ animationDelay: `${index * 100}ms` }}>
                    <CardHeader>
                      <CardTitle className="flex items-center gap-2">
                        <Icon name="Award" className="text-primary" size={24} />
                        {weightClass}
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <div className="space-y-3">
                        {fighters.map((fighter, idx) => (
                          <div 
                            key={fighter.id}
                            className="flex items-center justify-between p-4 rounded-lg bg-secondary/50 hover:bg-secondary transition-colors"
                          >
                            <div className="flex items-center gap-4">
                              <div className="w-10 h-10 rounded-full bg-primary flex items-center justify-center font-bold text-lg">
                                {fighter.rank}
                              </div>
                              <div>
                                <div className="font-bold text-lg">{fighter.name}</div>
                                <div className="text-sm text-muted-foreground">{fighter.nationality}</div>
                              </div>
                            </div>
                            <div className="text-right">
                              <div className="font-bold text-primary">{fighter.record}</div>
                              <div className="text-xs text-muted-foreground">
                                {fighter.wins}–ü-{fighter.losses}–ü—Ä
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    </CardContent>
                  </Card>
                );
              })}
            </div>
          </TabsContent>
        </Tabs>
      </div>

      <footer className="border-t border-border mt-16 py-8">
        <div className="container mx-auto px-4 text-center text-muted-foreground">
          <p>UFC Database ‚Äî –ø–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ–π—Ü–∞—Ö UFC</p>
        </div>
      </footer>
    </div>
  );
};

export default Index;
